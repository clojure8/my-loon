
[General]
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# [DNS] => DNS 服务器
dns-server = system,119.29.29.29,114.114.114.114,223.5.5.5,8.8.8.8
allow-udp-proxy = false
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
# allow-wifi-access = false
# wifi-access-http-port = 7222
# wifi-access-socket5-port = 7221
# > 代理测速 URL
proxy-test-url =  http://cp.cloudflare.com/generate_204
# > 测速超时 (s)
test-timeout = 3
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
# 解析器
# resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy 


[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）

[Remote Proxy]

[Remote Filter]

[Proxy Group]
# 节点选项
# PROXY = select,1,DIRECT
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
# Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
# Final = select,PROXY,DIRECT

#自定义
# 广告模式
PROXY = select,1,DIRECT
AdBlock = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
Final = select,Proxy,DIRECT


[Rule]
#本地规则
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
DOMAIN,google.com,PROXY
IP-CIDR,1.1.1.1/24,DIRECT,no-resolve
# GeoIP China
GEOIP,CN,DIRECT
FINAL,Final

[Remote Rule]
# Remote Rule
# 订阅规则URL,策略
# PROXY


[Host]

[URL Rewrite]
enable = true
# Redirect Google Search Service
(?<=_region=)CN(?=&) US 307
(?<=&mcc_mnc=)4 2 307
^(https?:\/\/(tnc|dm)[\w-]+\.\w+\.com\/.+)(\?)(.+) $1$3 302
(^https?:\/\/*\.\w{4}okv.com\/.+&.+)(\d{2}\.3\.\d)(.+) $118.0$3 302

[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)


[Script]
enable = false

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/js/js.conf,tag=自用脚本合集,enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/Loon.cookie.conf,tag=chavyleungCookie,enable=false
https://raw.githubusercontent.com/chavyleung/scripts/master/Loon.task.conf,tag=chavyleung脚本,enable=false

[Plugin]
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/Plugin/AdBlock.plugin,tag=clojure8自用广告屏蔽插件, enabled=true
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/Plugin/YouTubeAd.plugin,tag=youtube广告屏蔽, enabled=true
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/Plugin/bilibili.plugin,tag=Bilibili增强插件,enabled=true
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/Plugin/Qsearch.plugin,tag=safari聚合搜索百度版,enabled=true
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/Plugin/Qsearchddg.plugin,tag=safari聚合搜索duckduckgo版,enabled=false
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/Plugin/zhihu.plugin,tag=知乎增强插件,enabled=true
https://raw.githubusercontent.com/clojure8/rule_for_quantumultX/master/Loon/Plugin/BaiduAdBlock.plugin,tag=百度系广告屏蔽,enabled=true

[MITM]
enable = true
hostname =*.tiktokv.com,*.byteoversea.com,*.tik-tokapi.com 
# skip-server-cert-verify = true
ca-p12 = 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
ca-passphrase = 0Z94B674